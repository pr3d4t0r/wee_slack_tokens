#!/usr/bin/env python3
# vim: set fileencoding=utf-8:


# +++ constants +++

from pathlib import Path

import json
import os
import platform
import sqlite3


# +++ functions +++

def die(message, exitCode: int):
    print(message)
    exit(exitCode)


if '__main__' == __name__:
    uname = platform.uname().system
    assert uname == 'Darwin' or uname == 'Linux' or uname == 'Windows'

    try:
        if uname == 'Darwin':
            dataFirefox = next(Path.home().joinpath('Library/Application Support/Firefox/Profiles').glob('*.default-release'))
        elif uname == 'Linux':
            dataFirefox = next(Path.home().joinpath('.mozilla/firefox').glob('*.default-release'))
        elif uname == 'Windows':
            dataFirefox = next(Path.home().joinpath('AppData/Roaming/Mozilla/Firefox/Profiles').glob('*.default-release'))
    except:
        die('Firefox user default profile not found in %s' % dataFirefox, 2)

    try:
        cookiesStore = os.path.join(dataFirefox, 'cookies.sqlite')

        c = sqlite3.connect(cookiesStore)
        dCookie = c.execute('SELECT value FROM moz_cookies WHERE host = ".slack.com" AND name = "d"').fetchone()[0]
        c.close()

        webStore = os.path.join(dataFirefox, 'webappsstore.sqlite')

        c = sqlite3.connect(webStore)
        rawConfig = c.execute("SELECT value FROM webappsstore2 WHERE key = 'localConfig_v2'").fetchone()[0]
        c.close()

        for config in json.loads(rawConfig)['teams'].values():
            sessionToken = config['token']
            regCommand = '/slack register %s:%s' % (sessionToken, dCookie)
            print('%s:%s: %s' % ('E' if 'enterprise_id' in config else 'T', config['name'], regCommand))

        exit(0)
    except Exception as e:
        die('failed!  Run Firefox, log on to Slack, exit the browser, and try again\n%s' % str(e), 1)

